{"version":3,"sources":["Bingo.js","ShareButton.js","Show.js","Words.js","App.js","serviceWorkerRegistration.js","store.js","index.js"],"names":["Bingo","bingo","useSelector","state","dispatch","useDispatch","className","Table","TableBody","map","row","y","TableRow","x","name","value","TableCell","onClick","e","type","ShareButton","words","title","url","encodeURIComponent","IconButton","color","navigator","share","then","console","log","catch","error","input","document","createElement","body","append","select","setSelectionRange","execCommand","remove","Share","stateKey","children","Words","wordsInEditor","titleInEditor","Paper","Button","variant","Cancel","TextField","fullWidth","style","height","placeholder","onChange","target","Save","multiline","App","Edit","Shuffle","Show","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","defaults","JSON","stringify","showEditor","youwin","showMenu","values","parse","localStorage","getItem","urlParams","URLSearchParams","search","newWords","get","newTitle","setItem","bingoShuffle","all","split","w","trim","filter","sort","Math","random","rows","i","push","splice","bingoCheck","reduce","p","cell","checkRow","checkColumn","store","createStore","action","youWin","subscribe","getState","ReactDOM","render","StrictMode","CssBaseline","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.52a2357e.chunk.js","sourcesContent":["import { TableRow } from '@material-ui/core';\nimport { TableCell } from '@material-ui/core';\nimport { TableBody } from '@material-ui/core';\nimport { Table } from '@material-ui/core';\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst Bingo = () => {\n  const bingo = useSelector( state => state.bingo );\n  const dispatch = useDispatch();\n  return <div className=\"bingo container\">\n    <Table className=\"bingo\">\n      <TableBody>\n        { bingo.map( (row,y) => <TableRow key={'row_'+y}>\n          { row.map( ({name,value},x) =>\n          <TableCell\n          key={'cell_'+x} className={value ? 'bingo blue' : 'bingo white' }\n          onClick={ e => dispatch({ type: 'bingoClick', x, y  }) }\n          >{ name }</TableCell> )}\n        </TableRow>)}\n      </TableBody>\n    </Table>\n  </div>;\n}\n\nexport default Bingo;\n","import { IconButton } from '@material-ui/core';\nimport { Share } from '@material-ui/icons';\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux';\n\nconst ShareButton = () => {\n  const dispatch = useDispatch();\n  const { words, title } = useSelector( ({words,title}) => ({ words, title }) );\n  const url = `https://hakt0r.github.io/zbingo?title=${encodeURIComponent(title)}&words=${encodeURIComponent(words)}`;\n  return <IconButton color=\"inherit\" onClick={ e => {\n    if ( navigator.share ) {\n      navigator.share({ title: 'zbingo sheet', url })\n      .then( () => console.log('sharing is caring') )\n      .catch( console.error );\n    } else {\n      const input = document.createElement('input');\n      document.body.append(input);\n      input.value = url;\n      input.select();\n      input.setSelectionRange(0, 99999);\n      document.execCommand(\"copy\");\n      input.remove();\n      dispatch({ type:'shareShow' });\n    }\n  }}><Share/></IconButton>;\n}\n\nexport default ShareButton;\n","\nimport React from 'react'\nimport { useSelector } from 'react-redux';\n\nexport default ({stateKey,children}) => {\n  const value = useSelector( state => state[stateKey] );\n  return value ? children : null;\n}\n","import { Paper } from '@material-ui/core'\nimport { TextField } from '@material-ui/core'\nimport { Button } from '@material-ui/core'\nimport { Cancel, Save } from '@material-ui/icons'\nimport React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst Words = () => {\n  const dispatch = useDispatch();\n  const { wordsInEditor, titleInEditor } = useSelector( ({wordsInEditor,titleInEditor}) => ({ wordsInEditor, titleInEditor }) );\n  return (\n    <Paper className=\"dialog\">\n      <div className=\"top\">\n        <Button color=\"secondary\" variant=\"contained\" onClick={ e => dispatch({type:'editorToggle'}) }><Cancel/></Button>\n        <TextField fullWidth style={{height:'max-content'}}\n          placeholder=\"Wordlist Name\" value={titleInEditor} onChange={ e => dispatch({type:'editorTitle',value:e.target.value})}\n        />\n        <Button color=\"primary\" variant=\"contained\" onClick={ e => dispatch({type:'editorSave'}) }><Save/></Button>\n      </div>\n      <div className=\"bottom\">\n        <TextField fullWidth multiline variant=\"outlined\"\n          value={wordsInEditor} onChange={ e => dispatch({type:'editorChange',value:e.target.value})}\n        />\n      </div>\n    </Paper>\n  )\n}\n\nexport default Words\n","\nimport { Toolbar } from '@material-ui/core';\nimport { Typography } from '@material-ui/core';\nimport { Menu } from '@material-ui/icons';\nimport { IconButton } from '@material-ui/core';\nimport { AppBar } from '@material-ui/core';\nimport { Edit, ExitToApp, Shuffle } from '@material-ui/icons';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Bingo from './Bingo';\nimport ShareButton from './ShareButton';\nimport Show  from './Show';\nimport Words from './Words';\n\nfunction App() {\n  const dispatch = useDispatch();\n  const title = useSelector( ({title}) => title );\n  return <>\n  <div className=\"menuButton\">\n    <IconButton color=\"inherit\" onClick={ e => dispatch({type:'editorToggle'})}>\n      <Edit/>\n    </IconButton>\n    <IconButton color=\"inherit\" onClick={ e => dispatch({type:'bingoShuffle'})}>\n      <Shuffle/>\n    </IconButton>\n    <ShareButton/>\n  </div>\n  <Show stateKey=\"showMenu\">\n  </Show>\n  <Show stateKey=\"showEditor\">\n    <Words/>\n  </Show>\n  <Show stateKey=\"bingo\">\n    <Bingo/>\n  </Show></>; }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","\n\nimport { createStore } from \"redux\";\n\n// set defaults\n\nconst defaults = JSON.stringify({\n  title: \"All Hands 1\",\n  showEditor:false,\n  wordsInEditor: \"\",\n  titleInEditor: \"\",\n  words: \"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\\n16\\n17\\n18\\n19\\n20\\n21\\n22\\n23\\n24\\n25\",\n  bingo: false,\n  youwin: false,\n  showMenu: false\n});\n\n// read storage\n\nconst values = JSON.parse( localStorage.getItem('zbingo_state') || defaults );\n\n// read query params\n\nconst urlParams = new URLSearchParams(window.location.search);\nconst newWords = urlParams.get('words');\nconst newTitle = urlParams.get('title');\n\nif ( newWords && newTitle ){\n  values.words = newWords;\n  values.title = newTitle;\n  localStorage.setItem('zbingo_state',JSON.stringify(values));\n}\n\n// shuffle function\n\nconst bingoShuffle = (words) => { // split words, trim, remove empty, and shuffle\n  const all = words.split('\\n').map(w => w.trim()).filter(w => w != '').sort( () => Math.random() - 0.5 ).map( name => ({\n    name,\n    value: false\n  }));\n  const rows = [];\n  for ( let i = 0; i < 5; i++ ) rows.push( all.splice(0,5) );\n  return rows;\n};\n\n// winning rules\n\nconst bingoCheck = ( bingo ) => {\n  const checkRow = (row) => row.reduce( (p,cell) => p && cell.value, true );\n  const checkColumn = (x)=> bingo.reduce( (p,row) => p && row[x].value, true );\n  let win = false;\n  return (\n    bingo.reduce( (p,row) => p || checkRow(row), false ) ||\n    [0,1,2,3,4].reduce( (p,x)=> p || checkColumn(x), false ) ||\n    ( bingo[0][0].value && bingo[1][1].value && bingo[2][2].value && bingo[3][3].value && bingo[4][4].value ) ||\n    ( bingo[4][0].value && bingo[3][1].value && bingo[2][2].value && bingo[1][3].value && bingo[0][4].value )\n  );\n}\n\n// reducer\n\nconst store = createStore( ( state=values, action ) => {\n  switch ( action.type ) {\n    case \"toggleMenu\":   return { ...state, showMenu: ! state.showMenu };\n    case \"editorChange\": return { ...state, wordsInEditor: action.value.trim() };\n    case \"editorTitle\":  return { ...state, titleInEditor: action.value };\n    case \"editorToggle\": return { ...state, showEditor: !state.showEditor, wordsInEditor: state.words, titleInEditor: state.title, };\n    case \"bingoShuffle\": return { ...state, youWin:false, bingo: bingoShuffle(state.words) }\n    case \"editorSave\":   return { ...state, words:state.wordsInEditor, title:state.titleInEditor, showEditor:false, bingo:bingoShuffle(state.wordsInEditor), youWin:false };\n    case \"bingoClick\":\n      const bingo = [...state.bingo];\n      bingo[action.y] = [...bingo[action.y]];\n      bingo[action.y][action.x].value = ! bingo[action.y][action.x].value;\n      const youWin = bingoCheck(bingo);\n      return { ...state, bingo, youWin };\n    default: return state;\n  }\n}\n// , window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nstore.subscribe( ()=> {\n  localStorage.setItem('zbingo_state',JSON.stringify(store.getState()));\n});\n\nexport default store;","\n\nimport \"./bingo.css\";\n\nimport React    from 'react';\nimport ReactDOM from 'react-dom';\nimport App      from './App';\n// import reportWebVitals from './reportWebVitals';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { CssBaseline } from '@material-ui/core';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <CssBaseline/>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorkerRegistration.register();\n// reportWebVitals();\n"],"sourceRoot":""}